name: Scrape and Post New Jobs

on:
  workflow_dispatch:
  schedule:
    - cron: '6 12 * * *'

jobs:
  post_to_telegram:
    runs-on: ubuntu-latest

    steps:
    - name: Check out this repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Fetch latest job data
      run: |
        curl https://relocate-with-us.github.io/db.json | jq . > jobList.json

    - name: Compare and Post New Jobs
      env:
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        TELEGRAM_CHANNEL_ID: ${{ secrets.TELEGRAM_CHANNEL_ID }}
      run: |
        import os
        import json
        from pathlib import Path
        from telegram import Bot

        # Load the fetched data
        with open('jobList.json') as f:
            current_db = json.load(f)

        # Load the previous jobs data (if available)
        previous_jobs_path = Path(".github/previous_jobs.json")
        if previous_jobs_path.exists():
            with open(previous_jobs_path) as f:
                previous_db = json.load(f)
        else:
            previous_db = []

        # Identify new jobs
        previous_jobs_set = {job["description"] for job in previous_db}
        new_jobs = [job for job in current_db if job["description"] not in previous_jobs_set]

        # Post new jobs to Telegram
        if new_jobs:
            bot = Bot(token=os.getenv("TELEGRAM_BOT_TOKEN"))
            channel_id = os.getenv("TELEGRAM_CHANNEL_ID")

            for job in new_jobs:
                message = (
                    f"üì¢ *{job['position']}* at *{job['company']}*\n"
                    f"üåç Location: {job['location']}\n"
                    f"üíº Contract: {job['contract']}\n"
                    f"‚úàÔ∏è Relocation: {job['reloc']}\n"
                    f"üõÇ Visa: {job['visa']}\n"
                    f"üìÖ Posted on: {job['post_date']}\n"
                    f"[More Details]({job['description']})"
                )
                bot.send_message(chat_id=channel_id, text=message, parse_mode="Markdown")

            print(f"Posted {len(new_jobs)} new jobs to Telegram.")

        # Save the current jobs to track in the next run
        with open(previous_jobs_path, 'w') as f:
            json.dump(current_db, f, indent=2)
